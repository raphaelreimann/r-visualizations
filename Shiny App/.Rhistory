unique(netflix_data$Writer)
unique_writers <- unique(netflix_data$Writer)
unique_writers
data_test <- fread(input = "netflix-rotten-tomatoes-metacritic-imdb.csv", sep2 = ", ")
data_test <- data.table::fread(input = "netflix-rotten-tomatoes-metacritic-imdb.csv", sep2 = ", ")
View(data_test)
data_test <- seperate_rows(data_test, sep)
data_test <- tidyr::seperate_rows(data_test, sep)
library(tidyverse)
data_test <- tidyr::seperate_rows(data_test, sep)
data_test <- tidyr::seperate_rows(data_test, "Genre")
tidyr::seperate_rows(data_test, "Genre")
seperate_rows(data_test, "Genre")
library(tidyr)
seperate_rows(data_test, "Genre")
library(dplyr)
seperate_rows(data_test, "Genre")
tidyr::seperate_rows(data_test, "Genre")
data_test %>%
seperate_rows(Genre)
data_test %>%
separate_rows(Genre)
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
data_test <- lapply(netflix_data$Genre, str_split(pattern = ", "))
str_split("Test, Test2")
str_split("Test, Test2", pattern = ", ")
df <- str_split("Test, Test2", pattern = ", ")
df <- str_split_fixed("Test, Test2", pattern = ", ")
df <- str_split("Test, Test2", pattern = ", ")
data_test <- sapply(netflix_data$Genre, str_split(pattern = ", "))
data_test <- str_split(netflix_data$Genre, pattern = ", ")
netflix_data %>%
mutate(Genre2 = str_split(Genre, ", ", simplify = TRUE))
View(netflix_data)
netflix_data %>%
mutate(Genre2 = str_split(Genre, ", ", simplify = TRUE)[, 1])
unlist("1, 2, 3")
paste(unlist("1, 2, 3"), collapse = "")
strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")
strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[1, 2]
strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[2]
strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[1]
test <- strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[1]
test <- strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[1][3]
test <- strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ")[1][2]
length(strsplit("Crime, Drama, Fantasy, Horror, Romance", ", "))
unlist(strsplit("Crime, Drama, Fantasy, Horror, Romance", ", "))
list(strsplit("Crime, Drama, Fantasy, Horror, Romance", ", "))
list(strsplit("Crime, Drama, Fantasy, Horror, Romance", "\\, "))
strsplit("Crime, Drama, Fantasy, Horror, Romance", "\\, ")
strsplit("Crime, Drama, Fantasy, Horror, Romance", "\\, ")[2]
strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ", fixed = TRUE)
test <- strsplit("Crime, Drama, Fantasy, Horror, Romance", ", ", fixed = TRUE)
netflix_data %>%
mutate(Genre2 = str_split)
netflix_data %>%
mutate(Genre2, str_split)
netflix_data %>%
mutate(Genre2 = sapply(Genre, str_split))
str_split(netflix_data$Genre, ", ")
netflix_data$Genre2 <- str_split(netflix_data$Genre, ", ")
View(netflix_data)
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data$Genre <- str_split(netflix_data$Genre, ", ")
netflix_data$Tags <- str_split(netflix_data$Tags, ",")
netflix_data$Languages <- str_split(netflix_data$Languages, ", ")
netflix_data$`Country Availability` <- str_split(netflix_data$`Country Availability`, ",")
netflix_data$Director <- str_split(netflix_data$Director, ", ")
netflix_data$Director <- str_split(netflix_data$Director, ", ")
netflix_data$Writer <- str_split(netflix_data$Writer, ", ")
netflix_data$Actors <- str_split(netflix_data$Actors, ", ")
netflix_data$`Production House` <- str_split(netflix_data$`Production House`, ", ")
netflix_data %>%
filter("Drama" %in% Tags)
netflix_data %>%
filter("Drama" %in% Genre)
netflix_data %>%
filter("Short" %in% Genre)
shiny::runApp()
library(plotly)
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data$Image[5]
runApp()
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
shiny::runApp()
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data_cleaned <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data_cleaned$Genre <- str_split(netflix_data$Genre, ", ")
netflix_data_cleaned$Tags <- str_split(netflix_data$Tags, ",")
netflix_data_cleaned$Languages <- str_split(netflix_data$Languages, ", ")
netflix_data_cleaned$`Country Availability` <- str_split(netflix_data$`Country Availability`, ",")
netflix_data_cleaned$Director <- str_split(netflix_data$Director, ", ")
netflix_data_cleaned$Writer <- str_split(netflix_data$Writer, ", ")
netflix_data_cleaned$Actors <- str_split(netflix_data$Actors, ", ")
netflix_data_cleaned$`Production House` <- str_split(netflix_data$`Production House`, ", ")
runApp()
View(netflix_data_cleaned)
netflix_data %>%
filter("Short" %in% !Genre)
netflix_data %>%
filter("Short" %in% Genre)
netflix_data_cleaned %>%
filter("Short" %in% Genre)
netflix_data_cleaned %>%
filter("Short" %in% !Genre)
netflix_data_cleaned %>%
filter("Short" %in% Genre)
netflix_genre <- netflix_data$Genre
netflix_genre <- separate_rows(netflix_data$Genre, sep = ", ")
netflix_genre <- separate_rows(as.data.frame(netflix_data$Genre), sep = ", ")
View(netflix_genre)
netflix_genre <- as.data.frame(netflix_data$Genre)
View(netflix_genre)
netflix_genre <- separate_rows(netflix_genre, sep = ", ")
View(netflix_genre)
netflix_genre <- separate_rows(netflix_genre, sep = ", ", convert = TRUE)
View(netflix_genre)
netflix_genre <- separate_rows(netflix_genre, netflix_data$Genre, sep = ", ", convert = TRUE)
netflix_genre <- separate_rows(netflix_genre, "netflix_data$Genre", sep = ", ", convert = TRUE)
View(netflix_genre)
netflix_genre <- unique(netflix_genre)
netflix_genre <- as.data.frame(netflix_data$Genre, row.names = "Genre")
netflix_genre <- as.data.frame(netflix_data$Genre, col.names = "Genre")
netflix_genre <- as.data.frame(netflix_data$Genre)
netflix_genre <- separate_rows(netflix_genre, "netflix_data$Genre", sep = ", ", convert = TRUE)
netflix_genre <- unique(netflix_genre)
netflix_genre <- unique(separate_rows(as.data.frame(netflix_data$Genre), "netflix_data$Genre", sep = ", ", convert = TRUE))
netflix_tags <- unique(separate_rows(as.data.frame(netflix_data$Tags), "netflix_data$Tags", sep = ", ", convert = TRUE))
View(netflix_tags)
netflix_tags <- unique(separate_rows(as.data.frame(netflix_data$Tags), "netflix_data$Tags", sep = ",", convert = TRUE))
View(netflix_tags)
netflix_languages <- unique(separate_rows(as.data.frame(netflix_data$Languages), "netflix_data$Languages", sep = ", ", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame(`netflix_data$Country Availability`), "netflix_data$Country Availability", sep = ",", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame(`netflix_data$Country Availability`), `netflix_data$Country Availability`, sep = ",", convert = TRUE))
netflix_data <- read_csv("netflix-rotten-tomatoes-metacritic-imdb.csv")
netflix_data %>%
rename(
Tags = Tag,
Series_or_Movie = `Series or Movie`,
Hidden_Gem_Score = `Hidden Gem Score`,
Country_Availability = `Country Availability`,
View_Rating = `View Rating`,
IMDb_Score = `IMDb Score`,
Rotten_Tomatoes_Score = `Rotten Tomatoes Score`,
Metacritic_Score = `Metacritic Score`,
Awards_Received = `Awards Received`,
Awards_Nominated = `Awards Nominated For`,
Release_Date = `Release Date`,
Netflix_Release_Date = `Netflix Release Date`,
Production_House = `Production House`,
Netflix_Link = `Netflix Link`,
IMDb_Votes = `IMDb Votes`,
TMDb_Trailer = `TMDb Trailer`,
Trailer_Site = `Trailer Site`
)
netflix_data %>%
rename(
Tag = Tags,
Series_or_Movie = `Series or Movie`,
Hidden_Gem_Score = `Hidden Gem Score`,
Country_Availability = `Country Availability`,
View_Rating = `View Rating`,
IMDb_Score = `IMDb Score`,
Rotten_Tomatoes_Score = `Rotten Tomatoes Score`,
Metacritic_Score = `Metacritic Score`,
Awards_Received = `Awards Received`,
Awards_Nominated = `Awards Nominated For`,
Release_Date = `Release Date`,
Netflix_Release_Date = `Netflix Release Date`,
Production_House = `Production House`,
Netflix_Link = `Netflix Link`,
IMDb_Votes = `IMDb Votes`,
TMDb_Trailer = `TMDb Trailer`,
Trailer_Site = `Trailer Site`
)
netflix_data <- netflix_data %>%
rename(
Tag = Tags,
Series_or_Movie = `Series or Movie`,
Hidden_Gem_Score = `Hidden Gem Score`,
Country_Availability = `Country Availability`,
View_Rating = `View Rating`,
IMDb_Score = `IMDb Score`,
Rotten_Tomatoes_Score = `Rotten Tomatoes Score`,
Metacritic_Score = `Metacritic Score`,
Awards_Received = `Awards Received`,
Awards_Nominated = `Awards Nominated For`,
Release_Date = `Release Date`,
Netflix_Release_Date = `Netflix Release Date`,
Production_House = `Production House`,
Netflix_Link = `Netflix Link`,
IMDb_Votes = `IMDb Votes`,
TMDb_Trailer = `TMDb Trailer`,
Trailer_Site = `Trailer Site`
)
netflix_country_availability <- unique(separate_rows(as.data.frame("netflix_data$Country_Availability"), "netflix_data$Country_Availability", sep = ",", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame("netflix_data$Country_Availability"), "netflix_data$Country_Availability", sep = ",", convert = TRUE))
separate_rows(as.data.frame("netflix_data$Country_Availability")
separate_rows(as.data.frame("netflix_data$Country_Availability"))
separate_rows(as.data.frame("netflix_data$Country_Availability"), "netflix_data$Country_Availability", sep = ",", convert = TRUE)
netflix_genre <- unique(separate_rows(as.data.frame(netflix_data$Genre), "netflix_data$Genre", sep = ", ", convert = TRUE))
netflix_tags <- unique(separate_rows(as.data.frame(netflix_data$Tags), "netflix_data$Tag", sep = ",", convert = TRUE))
netflix_data$Genre
netflix_data$Tag
netflix_tags <- unique(separate_rows(as.data.frame(netflix_data$Tags), "netflix_data$Tag", sep = ",", convert = TRUE))
netflix_tags <- unique(separate_rows(as.data.frame(netflix_data$Tag), "netflix_data$Tag", sep = ",", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame("netflix_data$Country_Availability"), "netflix_data$Country_Availability", sep = ",", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame(netflix_data$Country_Availability), "netflix_data$Country_Availability", sep = ",", convert = TRUE))
netflix_country_availability <- unique(separate_rows(as.data.frame(netflix_data$Country_Availability), "netflix_data$Country_Availability", sep = ",", convert = TRUE))
netflix_director <- unique(separate_rows(as.data.frame(netflix_data$Director), "netflix_data$Director", sep = ", ", convert = TRUE))
netflix_writer <- unique(separate_rows(as.data.frame(netflix_data$Writer), "netflix_data$Writer", sep = ", ", convert = TRUE))
netflix_actors <- unique(separate_rows(as.data.frame(netflix_data$Actors), "netflix_data$Actors", sep = ", ", convert = TRUE))
netflix_production_house <- unique(separate_rows(as.data.frame(netflix_data$Production_House), "netflix_data$Production_House", sep = ", ", convert = TRUE))
netflix_writer
netflix_languages
netflix_actors
netflix_production_house
View(netflix_production_house)
netflix_data %>%
filter(grepl(netflix_actors[5], Actors))
netflix_actors[5]
View(netflix_director)
netflix_actors["netflix_data$Actor"][5]
netflix_actors["netflix_data$Actors"][5]
netflix_actors
as.vector(netflix_actors)
as.vector(netflix_actors)[5]
type(netflix_actors)
typeof(netflix_actors)
rownames(netflix_actors) <- c()
View(netflix_actors)
colnames(netflix_actors) <- c()
View(netflix_actors)
netflix_actors
netflix_actors[5]
netflix_actors[1][5]
netflix_actors[1]
netflix_actors[1,5]
netflix_actors[1][5]
head(netflix_actors)
head(netflix_actors, n = 1)
netflix_data %>%
filter(grepl(head(netflix_actors, n = 1), Actors))
head(netflix_actors, n = 1)
netflix_data %>%
filter(grepl(head(netflix_actors, n = 1), Actors))
netflix_actors <- as.data.frame(netflix_actors)
netflix_actors[5]
netflix_actors
netflix_actors[1][5]
View(netflix_actors)
typeof(netflix_data)
netflix_actors[1, 5]
netflix_actors[1, 7]
netflix_data
separate_rows(netflix_data, Genre, ", ")
separate_rows(netflix_data, "Genre", ", ")
separate_rows(netflix_data, "Genre")
separate_rows(netflix_data, "Genre") %>%
group_by(Genre) %>%
summarize(mean_hidden_gem_score = mean(hidden_gem_score))
separate_rows(netflix_data, "Genre") %>%
group_by(Genre)
separate_rows(netflix_data, "Genre") %>%
group_by("Genre")
separate_rows(netflix_data, "Genre") %>%
group_by("Genre") %>%
summarize(mean_hidden_gem_score = mean("hidden_gem_score"))
separate_rows(netflix_data, Genre) %>%
group_by("Genre") %>%
summarize(mean_hidden_gem_score = mean("hidden_gem_score"))
separate_rows(netflix_data, Genre) %>%
group_by("Genre") %>%
summarize(mean_hidden_gem_score = mean("hidden_gem_score"))
separate_rows(netflix_data, Genre) %>%
group_by("Genre") %>%
summarize(mean_hidden_gem_score = mean(hidden_gem_score))
x <- c("Martin", "Steve", "Christian", "Christiansen")
grepl("Martin", x)
grepl("Christian", x)
netflix_data %>%
filter(Title == "Lets Fight Ghost")
filter(netflix_data, Title == "Lets Fight Ghost")
filter(netflix_data, "Title" == "Lets Fight Ghost")
library(dplyr)
netflix_data %>%
filter(Title == "ANNE+")
netflix_data %>%
filter(grepl("Harry Lloyd", Actors))
netflix_actors
netflix_actors[2]
netflix_actors[,2]
netflix_actors[1,2]
netflix_actors[1,5]
class(netflix_actors)
names(netflix_actors)
ncol(netflix_actors)
nrow(netflix_actors)
length(netflix_actors)
netflix_actors[[3]]
netflix_actors[[0]]
netflix_actors[[2]]
netflix_actors[[1]]
netflix_actors[[1,4]]
netflix_actors[[1][4]]
netflix_data["Title"][3]
netflix_data["Title"][1]
netflix_data["Title"][1,4]
netflix_data["Title"]
netflix_data[1, 3]
netflix_data[1, ]
netflix_actors[1, ]
netflix_actors[5, ]
class(netflix_data[1, ])
netflix_data[1, ]
class(netflix_actors[5, ])
netflix_actors[5, ]
names(netflix_actors)
names(netflix_actors) <- "Test"
names(netflix_actors) <- "Name"
netflix_data %>%
filter(grepl("Arnold Schwarzenegger", Actors))
netflix_genre <- unique(separate_rows(as.data.frame(netflix_data$Genre, col.names = "Genre"), "netflix_data$Genre", sep = ", ", convert = TRUE))
library(tidyr)
netflix_genre <- unique(separate_rows(as.data.frame(netflix_data$Genre, col.names = "Genre"), "netflix_data$Genre", sep = ", ", convert = TRUE))
names(netflix_genre)
names(netflix_genre) <- "Genre"
names(netflix_genre) <- "Genre"
names(netflix_tags) <- "Tag"
names(netflix_languages) <- "Language"
names(netflix_country_availability) <- "Country"
names(netflix_director) <- "Director"
names(netflix_writer) <- "Writer"
names(netflix_actors) <- "Actor"
names(netflix_production_house) <- "Production_House"
netflix_actors[6, ]
netflix_actors[6]
netflix_actors[6, ]
x <- netflix_actors[6, ]
netflix_data %>%
filter(grepl(x, Actors))
x
netflix_data %>%
filter(grepl(x, Actors))
netflix_data %>%
filter(grepl(x, Actors, fixed = TRUE))
x
netflix_data %>%
filter(grepl(x, Actors, fixed = TRUE))
airbnb_data <- read.csv("airbnb-listings.csv")
airbnb_data <- read.csv("airbnb-listings_cleaned.csv")
airbnb_data <- read.csv("airbnb-listings_cleaned.csv", sep = '\t')
View(airbnb_data)
airbnb_data <- read.csv("airbnb-listings_cleaned.csv", sep = ',')
airbnb_data <- read.csv("airbnb-listings.csv", sep = ',')
airbnb_data <- read.csv("airbnb-listings.csv", sep = ';')
View(airbnb_data)
airbnb_data <- read.csv("airbnb-listings.csv", sep = ';', encoding = "UTF-8")
View(airbnb_data)
fig <- plot_geo(airbnb_data, lat = ~lat, lon = ~lon)
fig <- fig %>%
plot_ly(
lat = ~lat,
lon = ~lon,
type = 'scattermapbox'
)
library(plotly)
fig <- airbnb_data
fig <- fig %>%
plot_ly(
lat = ~lat,
lon = ~lon,
type = 'scattermapbox'
)
fig
View(airbnb_data)
fig <- fig %>%
plot_ly(
lat = ~Latitude,
lon = ~Longitude,
type = 'scattermapbox'
)
fig <- fig %>%
plot_ly(
lat = ~Latitude,
lon = ~Longitude,
type = 'scattermapbox'
)
fig <- airbnb_data
fig <- fig %>%
plot_ly(
lat = ~Latitude,
lon = ~Longitude,
type = 'scattermapbox'
)
fig
fig <- fig %>%
layout(
mapbox = list(
style = 'open-street-map',
zoom = 4
)
)
fig
airbnb_data$Medium.Url[1]
airbnb_data$XL.Picture.Url[1]
airbnb_data$XL.Picture.Url[780]
shiny::runApp()
airbnb_data$Linsting.Url[780]
airbnb_data$Linsting.Url[1]
airbnb_data$Listing.Url[1]
filter(airbnb_data, Experiences.Offered != "none")
airbnb_data$Listing.Url[1]
filter(airbnb_data, Experiences.Offered != "none")
filter(airbnb_data, Experiences.Offered == "none")
View(airbnb_data)
shiny::runApp()
airbnb %>%
select("Name", "Space", "Description")
airbnb_data %>%
select("Name", "Space", "Description")
airbnb_data %>%
select("Name", "Host.Name", "Neighbourhood.Cleansed")
runApp()
View(airbnb_data)
airbnb_data %>%
select(V5:V9)
airbnb_data %>%
select("Host.ID":"Host.Verification")
airbnb_data %>%
select("Host.ID":"Host.Verifications")
airbnb_data %>%
select("Host.ID":"Host.Verifications") %>%
filter(Host.Name == "Maria")
airbnb_data %>%
select("Host.ID":"Host.Verifications") %>%
filter(Host.Name == "Maria") %>%
arrange(Host.Response.Rate)
View(airbnb_data)
shiny::runApp()
airbnb_data %>%
group_by(Zipcode) %>%
summarise(
n = n(),
Price = mean(Price),
Review.Scores.Rating = mean(Review.Scores.Rating)
)
airbnb_data %>%
group_by(Zipcode) %>%
summarise(
n = n(),
Price = mean(Price),
Review.Scores.Rating = mean(Review.Scores.Rating)
)
airbnb_data %>%
group_by(Neighbourhood.Cleansed) %>%
summarise(
n = n(),
Price = mean(Price),
Review.Scores.Rating = mean(Review.Scores.Rating)
)
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(
n = n(),
Price = mean(Price),
Review.Scores.Rating = mean(Review.Scores.Rating)
)
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise_each(
#n = n(),
#Price = mean(Price),
#Review.Scores.Rating = mean(Review.Scores.Rating)
funs(sum(!is.na(.)))
)
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise_each(
#n = n(),
#Price = mean(Price),
#Review.Scores.Rating = mean(Review.Scores.Rating)
funs(mean(!is.na(.)))
)
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(
#n = n(),
#Price = mean(Price),
#Review.Scores.Rating = mean(Review.Scores.Rating)
funs(mean(!is.na(.)))
)
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(across(mean = mean))
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(across(everything(), list(mean = mean)))
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(across(everything(), ~ !is.na(.), list(mean = mean)))
airbnb_data %>%
group_by(Neighbourhood.Group.Cleansed) %>%
summarise(across(everything(), ~ !is.na(.)))
airbnb_data %>%
filter(across(everything(), ~ !is.na(.)))
airbnb_data %>%
filter(across(c(Beds, Country), ~ !is.na(.)))
shiny::runApp()
